- name: Install this role on {{ansible_os_family}}
  include: "{{ansible_os_family}}.yml"

- name: Set viturl memory
  sysctl:
    name: vm.max_map_count
    value: 655360
    state: present
    reload: yes

- name: Set cluster.name
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '^#cluster.name: '
    line: 'cluster.name: {{elasticsearch_clurname}}'

- name: Set node.name
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '^#node.name: '
    line: 'node.name: node-1'

- name: Initial_master_nodes
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '^#cluster.initial_master_nodes: '
    line: 'cluster.initial_master_nodes: ["node-1"]'
    backrefs: yes

- name: Set elasticsearch port
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '^#http.port: '
    line: 'http.port: {{elasticsearch_port}}'

- name: Enable elasticsearch remote connection
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '^#network.host: '
    line: 'network.host: 0.0.0.0'     
  when: elasticsearch_remote

# Enabling password Authentication
- block:
    - name: Check the elasticsearch version
      fail: msg="The version you currently select does not support security authentication for free"
      when: elasticsearch_version < '7.1' and elasticsearch_version != '6.8'

    - name: Enable xpack.security
      blockinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        block: |
          xpack.security.enabled: true
          xpack.license.self_generated.type: basic
          xpack.security.transport.ssl.enabled: true

    - name: Restart elasticsearch
      service:
        name: elasticsearch.service
        state: restarted
        enabled: yes

    - wait_for: port={{elasticsearch_port}} delay=10
    
    - name: Set elastic password
      shell: |
        echo "y
        {{elasticsearch_passwd}}
        {{elasticsearch_passwd}}
        {{elasticsearch_passwd}}
        {{elasticsearch_passwd}}
        {{elasticsearch_passwd}}
        {{elasticsearch_passwd}}
        {{elasticsearch_passwd}}
        {{elasticsearch_passwd}}
        {{elasticsearch_passwd}}
        {{elasticsearch_passwd}}
        {{elasticsearch_passwd}}
        {{elasticsearch_passwd}}" | /usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive
  when: elasticsearch_authentication 
      
- name: Restart elasticsearch
  service:
    name: elasticsearch.service
    state: restarted
    enabled: yes

- name: Set soft link
  shell: |
    ln -sf /var/log/elasticsearch  /data/log/
    ln -sf /var/lib/elasticsearch /data/
    ln -sf /etc/elasticsearch/elasticsearch.yml /data/config/

# Check version,
# must use sudo sh -c to solve the no-root permission
- block:
  - wait_for: port={{elasticsearch_port}} delay=10
  
  - name: Check Elasticsearch Version
    shell: sudo echo "elasticsearch  version:" $(curl -XGET localhost:9200  |grep number |cut -d '"' -f 4)  | sudo tee -a /data/logs/install_version.txt

- name: Check Elasticsearch Service
  shell: systemctl status elasticsearch | grep Active*
  register: Check_elasticsearch_service
  notify: Check_elasticsearch_service

# install kibana
# configure Kibana
- block:
    - name: Set kibana port
      lineinfile:
        path: /etc/kibana/kibana.yml
        regexp: '^#server.port: '
        line: 'server.port: {{elasticsearch_kibana_port}}'
        state: present
    - name: Set the bind host
      lineinfile:
        path: /etc/kibana/kibana.yml
        regexp: '^#server.host: '
        line: 'server.host: "0.0.0.0"'
        state: present
    - name: Kibana connect elasticsearch
      lineinfile:
        path: /etc/kibana/kibana.yml
        regexp: '^#elasticsearch.hosts: '
        line: 'elasticsearch.hosts: ["http://localhost:9200"]'
        state: present
        backrefs: yes
    - name: Set kibana username
      lineinfile:
        path: /etc/kibana/kibana.yml
        regexp: '^#elasticsearch.username: '
        line: "elasticsearch.username: 'elastic'"
        state: present
      when: elasticsearch_authentication 
    - name: Set kibana passwod
      lineinfile:
        path: /etc/kibana/kibana.yml
        regexp: '^#elasticsearch.password: '
        line: "elasticsearch.password: '{{elasticsearch_passwd}}'"
        state: present
      when: elasticsearch_authentication 
    - name: Restart Kibana
      service:
        name: kibana.service
        state: restarted
        enabled: yes
    - name: Set soft link
      shell: |
        ln -sf /var/log/kibana  /data/log/
        ln -sf /var/lib/kibana  /data/
        ln -sf /etc/kibana/kibana.yml /data/config/
    - wait_for: port={{elasticsearch_kibana_port}} delay=10
    - name: Check centos Kibana Version
      shell: sudo echo "kibana version:" `rpm -qa | grep kibana | awk -F "-" '{print $2}'` | sudo tee -a /data/logs/install_version.txt
    - name: Check Kibana Service
      shell: systemctl status kibana | grep Active*
      register: Check_kibana_service
      notify: Check_kibana_service
  when: elasticsearch_install_kibana
