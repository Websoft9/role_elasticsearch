# install Elasticsearch by OS_family
- name: Install this role on {{ansible_os_family}}
  include: "{{ansible_os_family}}.yml"

- name: set viturl memory
  lineinfile:
    create: yes
    path: /etc/sysctl.conf
    line: 'vm.max_map_count=655360'

- name: sysctl -p
  shell: sysctl -p

- name: set cluster.name
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '#cluster.name: my-application'
    line: 'cluster.name: {{elasticsearch_clurname}}'

- name: set node.name
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '#node.name: node-1'
    line: 'node.name: node-1'

#elasticsearch
- name: set auto_create_index
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    create: yes
    line: 'action.auto_create_index: {{elasticsearch_create_index}}'

#- name: initial_master_nodes
#  lineinfile:
#    path: /etc/elasticsearch/elasticsearch.yml
#    create: yes
#    line: 'cluster.initial_master_nodes: ["node-1"]'

- name: http.port
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '#http.port: 9200'
    line: 'http.port: {{elasticsearch_port}}'

- name: Enable elasticsearch remote connection
  replace:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '#network.host: 192.168.0.1'
    replace: 'network.host: 0.0.0.0'     
  when: elasticsearch_remote

- name: Restart elasticsearch
  service:
    name: elasticsearch.service
    state: restarted
    enabled: yes

# set soft link, -b cover the exist links
# ln -sb src des
- name: set soft link
  shell: |
    ln -sf /var/log/elasticsearch  /data/log/
    ln -sf /var/lib/elasticsearch /data/
    ln -sf /etc/elasticsearch/elasticsearch.yml /data/config/

# Check version,
# must use sudo sh -c to solve the no-root permission
- block:
  - wait_for: port={{elasticsearch_port}} delay=10
  
  - name: Check Elasticsearch Version
    shell: sudo echo "elasticsearch  version:" $(curl -XGET localhost:9200  |grep number |cut -d '"' -f 4)  |sudo tee -a /data/logs/install_version.txt

# check service state
- name: Check Elasticsearch Service
  shell: systemctl status elasticsearch | grep Active*
  register: check_elasticsearch_service
  notify: check_elasticsearch_service


# install kibana

# install Kibana by OS_family
- name: Install this role on {{ansible_os_family}}
  include: "{{ansible_os_family}}.yml"
  when: elasticsearch_install_kibana 

# configure Kibana
- name: enable ipaddress
  lineinfile:
    path: /etc/kibana/kibana.yml
    regexp: '#server.port: 5601'
    line: 'server.port: {{kibana_port}}'
    state: present
    backrefs: yes
  when: elasticsearch_install_kibana

- name: http.port
  lineinfile:
    path: /etc/kibana/kibana.yml
    regexp: '#server.host: "localhost"'
    line: 'server.host: "0.0.0.0"'
    state: present
    backrefs: yes
  when: elasticsearch_install_kibana 

- name: elasticsearch.hosts
  lineinfile:
    path: /etc/kibana/kibana.yml
    regexp: '^#elasticsearch\.hosts'
    line: 'elasticsearch.hosts: ["http://localhost:9200"]'
    state: present
    backrefs: yes
  when: elasticsearch_install_kibana

#- name: run logstash
#  shell: /usr/share/logstash/bin/logstash -e 'input { stdin { } } output { stdout {} }'

- name: Restart Kibana
  service:
    name: kibana.service
    state: restarted
    enabled: yes
  when: elasticsearch_install_kibana

# set soft link, -f enforce the exist links
# ln -sf src des
- name: set soft link
  shell: |
    ln -sf /var/log/Kibana  /data/log/
    ln -sf /var/lib/Kibana  /data/
    ln -sf /etc/Kibana/Kibana.yml /data/config/
  when: elasticsearch_install_kibana
# Check version,
# must use sudo sh -c to solve the no-root permission
- block:
  - name: Check Kibana Version
    shell: sudo echo "kibana version:"`rpm -qa | grep kibana | awk -F "-" '{print $2}'` 1>> /data/logs/install_version.txt
  when: elasticsearch_install_kibana

# check service state
- name: Check Kibana Service
  shell: systemctl status kibana | grep Active*
  register: check_kibana_service
  notify: check_kibana_service
  when: elasticsearch_install_kibana